>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1]], 2)
[[0.5]]
>>> matrix_divided([[1], [2, 3]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 26, in matrix_divided
    raise TypeError('Each row of the matrix must have the same size')
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 4], [2, 3]], 2)
[[0.5, 2.0], [1.0, 1.5]]
>>> matrix_divided([[1, 4], [2, 3]], 'hello')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 9, in matrix_divided
    raise TypeError('div must be a number')
TypeError: div must be a number
>>> matrix_divided([[1, 4], [2, 3]], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 11, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 4], [2, 3], ['hello', 2]], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 30, in matrix_divided
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 16, in matrix_divided
    raise TypeError('matrix must be a matrix (list of lists) of integers/floats')
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([1, 2, 3], 0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "2-matrix_divided.py", line 11, in matrix_divided
    raise ZeroDivisionError('division by zero')
ZeroDivisionError: division by zero
